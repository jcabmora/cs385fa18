********************************
CS385 Cloud Systems Architecture
********************************

Instructor Contact Information
==============================
:Section:
    3
:Name:
    Jorge Cabrera
:Email:
    cabrera@sonoma.edu
:Office Hours:
    Fridays from 12:00 PM to 1:00 PM


General Course Information
==========================

:Schedule:
    Fri 1\:00 PM to 3\:40 PM @ Stevenson 1034.
:Prerequisites: 
    CS 315, or consent of the instructor.
:Labs Page:
    http://jcabmora.github.io/cs385fa2018

Course Description
==================
Lecture and Laboratory, 2:40 hours per week.

Students will learn fundamental concepts required to design and implement cloud-based systems.
Topics such as virtualization, scalability, partitioning, continuous integration, and microservices will be discussed in class and learned through practical lab exercises and case studies.

Course Format
=============
The course will be taught following a mixture of lectures, demonstration, and self-directed, skill-building exercises.
Assigned short readings and exercises will provide context and foundational knowledge for the class.


Course Goals and Student Learning Objectives
============================================

Upon successful completion of this course, students will be able to: 

* Design, build, test, deploy and manage scalable system using cloud services
* Propose high level system architecture designs using cloud services
* Identify trade-offs of different system architectures
* Identify low level application design considerations to successfully deploy an application in the cloud.
* Apply virtualization, caching, partitioning, messaging, to solve scalability problems


Prerequisites
=============

Fluency in Unix and shell scripts is expected and will be needed for this class.
Ability to write programs in at least one high-level programming languages (such as Python, Ruby, C++, Java or Go) will be needed to be able to complete the programming assignments.

Textbook
========

No textbook is required for this class.
Freely available reading material will be assigned during each lecture.


Systems Access
==============

For this class you will need access to:

* ``blue.cs.sonoma.edu``. If you have not obtained this access, please make sure you reach out to Roger Mamer (roger.mamer@sonoma.edu -  Office next to Darwin 25) to have your account set up.
* Google Cloud Platform.  We have obtained educational credits to be able to use Google Cloud for this class.  Instructions to apply this credit will be provided in class.  If you prefer to use another service such as AWS, DigitalOcean, Azure or Heroku, you are welcome to use them as well (however, you will need to cover the cost). 

Course Schedule
===============

The schedule is subject to change, with fair notice via Moodle.


.. cssclass:: minitable

=============       ==========
Week                Topic
=============       ==========
1                   Introduction
2                   Virtualization and Cloud Infrastructure
3-4                 Containerization and Orchestration
5-6                 Scalability / Availability
7                   Architectural Components
8                   Web Tier and Caching
9-10                Distributed Systems
11-12               Distributed Databases
13                  Stream Processing
14                  Metrics
15-16               Project
=============       ==========


Classroom Protocol
==================
Moodle will be used to maintain grades, syllabus, schedule, assignments and class resources.
Moodle always holds the most current and authoritative set of due dates, exam dates, assignment instructions and other course material.
Course announcements will be done on Moodle, so you should check it frequently and adjust your notification settings as appropriate.
Moodle is the place where you will find the course syllabus, read posted announcements in the news forum, participate in online class discussions with classmates, submit your assignments online and view the materials for this course. 
To access the Moodle course use your SSU Seawolf ID and password to log into SSU's Online Services Portal https://login.sonoma.edu. 
Click on the Moodle link. 
When you get to the Moodle site home, click on the “My Courses” menu located on the top navigation. 
Click on the link for this course (classes are listed by course name and number). 
Note: The Login link is also conveniently located at the top of the Sonoma State University homepage http://www.sonoma.edu and many other university pages.

Visit Learning with Moodle http://www.sonoma.edu/it/students/moodle.html to review frequently asked questions about using Moodle and also to view a list of technical recommendations.


Grading
=======
Your overall course grade will be determined by the following:


.. cssclass:: minitable

=============       ==========
Item                Percentage
=============       ==========
Project             20%
Final Exam          20%
Quizzes             30%
Labs/Homework       30%
=============       ==========

Your final grade will be determined as follows:

.. cssclass:: minitable

==========      =====
Percentage      Grade
==========      =====
100% – 94%      A
93% – 90%       A-
89% – 87%       B+
86% – 84%       B
83% – 80%       B-
79% – 77%       C+
76% – 74%       C
73% – 70%       C-
69% – 67%       D+
66% – 63%       D
62% – 60%       D-
below  60       F
==========      =====

Quizzes
-------

In-class quizzes will be given almost every lecture.
Unless otherwise stated by the instructor, they will cover topics given on the previous session, and the assigned labs or readings.

Labs
----

Several labs will be provided during the semester.
Time to work on the labs will be allocated every week, and students are expected to complete the labs as homework.

Students will be asked to submit their work for each lab, the due dates for each assigned task will be announced in moodle.
Lab work submissions will consist of a combination of one or more of the following:

* a writen a report
* source code and/or executable binaries
* url where your work can be tested/verified
* the provisioning of a service that can be tested by the class instructor.

Your labs will be evaluated in terms of:

* **Correctness**: The answer does not contain errors and addresses the problem or question that you are asked to solve.
* **Efficiency**: The problem is solved with the least amount of resources (which includes both human and computating resources).

Project
-------

As a project, you will be asked to build a service using Cloud infrastructure. Students are encouraged to work in teams of up to 3 members.
The details of the project will be given to you within the first 4 weeks, so you will have plenty of time to work on your project.
In the last week of the semester, you will present your project and you will demonstrate its functionality.
You will be allowed 20 minutes for your presentation.

In your presentation you should at least cover:

1) Description of the components
2) Design challenges and decisions
3) A demonstration of the tool/service that you provisioned
4) Metrics and scale demonstration

Regrade policy
==============

Regrade requests will be accepted up to 7 days after an assignment is returned.
The reason for the regrade request must be explained in writing and submitted as a hard copy along with the assignment to be regraded

Late policy
===========
You may deliver an assignment at later time, but for every 24 hours a 20% of the assignment's grade will be deducted.


Collaboration policy
====================
During quizzes absolutely no collaboration is allowed, unless the instructor explicitly states the contrary. 
This includes shoulder surfing, peeking at other people’s screens, using Unix utilities to communicate with remote users, IRC or any other chat software, etc.
All normal, real-world materials will be available to you (Internet, man pages, etc) during tests.

During the labs, you are expected to discuss ideas and approaches with other students and the course staff, and checking your work through discussion with other students is desirable.
When encountering significant technical problems, you are encouraged to help peers and seek help from your peers during and outside lab. 
The following actions, however, will be penalized as academic dishonesty:

* Looking at another student’s work, digital files or screen without their permission.
* Letting someone else ‘drive’ your keyboard or ‘driving’ someone else’s keyboard, i.e., passing a keyboard over to let someone type it for you. There is always a simple solution: just grab a piece of whiteboard, write it out and talk about it away from the computer.
* Copying part or all of another person’s solution or any solutions that have not been provided by the instructor.

Students should be familiar with the University’s Cheating and Plagiarism policy http://www.sonoma.edu/UAffairs/policies/cheating_plagiarism.htm. 
Your own commitment to learning, as evidenced by your enrollment at Sonoma State University and the University’s policy, require you to be honest in all your academic course work. 
Instances of academic dishonesty will not be tolerated. 
Cheating on exams or plagiarism (presenting the work of another as your own, or the use of another person’s ideas without giving proper credit) will result in a failing grade and sanctions by the University. 
